# Инструкция: Монитор топ‑100 держателей ETH с уведомлениями в Telegram

## 1) Что делает скрипт
- Парсит страницу топ‑аккаунтов Etherscan и получает **топ‑100 держателей ETH**.
- Если Etherscan недоступен/изменил верстку, и у вас есть ключ Bitquery — может взять список через Bitquery (GraphQL).
- Сравнивает текущий список с прошлым снимком и отправляет в Telegram:
  - новые адреса, попавшие в топ‑100,
  - адреса, выбывшие из топ‑100,
  - изменения рангов (перемещения вверх/вниз).
- Периодически (настраивается) может присылать *полный* список топ‑100.
- Хранит последний снимок в JSON-файле, чтобы отслеживать изменения между запусками.

## 2) Подготовка окружения
1. Установите Python 3.10+ (подойдет 3.8+, но рекомендую 3.10+).
2. Скачайте архив с файлами и распакуйте в отдельную папку.

Структура папки после распаковки:
```
eth_top_monitor/
  ├─ eth_top_monitor.py
  ├─ requirements.txt
  ├─ config.example        (шаблон .env)
  └─ README_instructions_ru.txt (этот файл)
```

## 3) Установка зависимостей
```bash
cd eth_top_monitor
python -m venv venv
# Windows:
venv\Scripts\activate
# macOS / Linux:
source venv/bin/activate

pip install -r requirements.txt
```

## 4) Настройка .env
Создайте файл `.env` (можно на основе `config.example`) и внесите параметры:

```
TELEGRAM_BOT_TOKEN=ваш_токен_бота
TELEGRAM_CHAT_ID=целевой_chat_id
POLL_INTERVAL=600                 # интервал опроса в секундах
ETHERSCAN_API_KEY=                # опционально
BITQUERY_API_KEY=                 # опционально (резервный источник)
SNAPSHOT_FILE=top100_snapshot.json
SEND_FULL_EVERY=144               # раз в N опросов прислать полный список (0 — отключить)
LOG_LEVEL=INFO
```

- **TELEGRAM_BOT_TOKEN** — получите у @BotFather.
- **TELEGRAM_CHAT_ID** — можно узнать через @userinfobot или `getUpdates`.
- **POLL_INTERVAL** — по умолчанию 10 минут.
- **SEND_FULL_EVERY** — если оставить 144 и интервал 10 минут, полный список будет приходить примерно раз в сутки.

## 5) Запуск
```bash
python eth_top_monitor.py
```
Первый запуск:
- Получит текущий топ‑100;
- Сохранит снимок;
- Отправит уведомления, если список отличается от предыдущего снимка (при первом запуске изменений, скорее всего, не будет).

Скрипт работает постоянно и раз в `POLL_INTERVAL` секунд проверяет обновления.

## 6) Как понять, что всё работает
- В консоли будут сообщения логгера.
- В Telegram будут приходить уведомления при изменениях в топ‑100.
- Файл `top100_snapshot.json` появится в папке проекта (последний снимок).

## 7) Советы и ограничения
- Etherscan периодически меняет вёрстку и может применять антибот-защиту. Если парсинг сломается, либо увеличьте интервал, либо используйте Bitquery API (платный/лимитированный), либо временно запустите скрипт позже.
- Если нужно чаще/реже проверять — меняйте `POLL_INTERVAL`.
- Если не хотите периодическую рассылку полного списка — поставьте `SEND_FULL_EVERY=0`.
- Для продакшена удобно оформить в сервис (systemd) или в Docker. Спросите — подготовлю `Dockerfile` и `docker-compose.yml`.

## 8) Быстрый FAQ
**Q:** Можно ли добавить теги (имена бирж, метки адресов)?  
**A:** Да, но потребуются дополнительные запросы к Etherscan/другим API на каждый адрес. Могу расширить скрипт.

**Q:** Можно ли писать не в чат, а в личку?  
**A:** Да, укажите `TELEGRAM_CHAT_ID` вашего пользователя.

**Q:** Как остановить?  
**A:** Нажмите Ctrl+C в консоли, где запущен скрипт.

Удачного мониторинга!
